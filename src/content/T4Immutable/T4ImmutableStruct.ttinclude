<#@ assembly Name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="EnvDTE80" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="EnvDTE" #>
<#+
public class StructInfo {
  public EnvDTE80.CodeStruct2 CodeStruct { get; }
  public bool Generated { get; }
  public ClassInfo ParentClass { get; }
  public StructInfo ParentStruct { get; }

  public string Name { get { return CodeStruct.Name; } } 
  public string FullName { get { return  CodeStruct.FullName; } }
  public EnvDTE.CodeNamespace CodeNamespace { get { return CodeStruct.Namespace; } } 
  public string GenericString { get; }

  public string Namespace { 
    get {
      return CodeNamespace != null ? CodeNamespace.FullName : "";
    } 
  }

  public string TypeString { get { return "struct"; } }

  public StructInfo(CodeStruct thisStruct) {
    CodeStruct = (EnvDTE80.CodeStruct2)thisStruct;

    Generated = FindAttribute(thisStruct.Attributes, CustomGeneratedCodeAttribute) != null;

    var parentClass = CodeStruct.Parent as EnvDTE80.CodeClass2;
    var parentStruct = CodeStruct.Parent as EnvDTE80.CodeStruct2;
    ParentClass = parentClass == null ? null : new ClassInfo(parentClass);
    ParentStruct = parentStruct == null ? null : new StructInfo(parentStruct);

    // fix for Foo<B>.Bar<C>
    var strippedFullName = FullName;
    if (ParentClass != null) strippedFullName = strippedFullName.Substring(ParentClass.FullName.Length + 1);
    if (ParentStruct != null) strippedFullName = strippedFullName.Substring(ParentStruct.FullName.Length + 1);
    GenericString = ExtractGeneric(strippedFullName);
  }

  public void MarkAsPartial() {
    string fileName = CodeStruct.ProjectItem.Name;
    if (CodeStruct.DataTypeKind != EnvDTE80.vsCMDataTypeKind.vsCMDataTypeKindPartial) {
      try {
        CodeStruct.DataTypeKind = EnvDTE80.vsCMDataTypeKind.vsCMDataTypeKindPartial;
      }
      catch {
        AddWarning(fileName + " - Unable to mark struct " + FullName + " as partial. Please change it manually if possible");
      }
    }
  }

}
#>